# -*- coding: utf-8 -*-
"""Customer Segmentation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AcM82VtCzoJ5z4OqDHm9d9SnqKakA-P0
"""

import pandas as pd
import numpy as np
import seaborn as sns
from matplotlib import pyplot as plt

data=pd.read_csv("/content/Mall_Customers.csv")

data.head()

data.info()

data.shape

data.describe().T

data.isnull().sum()

duplicate_rows = data.duplicated().any()
duplicate_rows

sns.set_style("white")
ax = sns.catplot(x='Gender', hue='Age', kind='count', data=data)

plt.xlabel('Gender')
plt.ylabel('Number of Customers')
plt.title('Relationship between gender and age')

plt.show()

rocket_palette = sns.color_palette("rocket", n_colors=len(data['Age'].value_counts().index))

plt.figure(figsize=(16, 6))
sns.countplot(x="Age", data=data,
              order=data['Age'].value_counts().index,
              palette=rocket_palette)

plt.title('Distribution of Age')
plt.xlabel('Age')
plt.ylabel('count')
plt.xticks(rotation=45, ha='right')
plt.show()

plt.scatter(data.Age,data['Annual Income (k$)'])
plt.xlabel('Age')
plt.ylabel('Annual Income (k$)')

sns.relplot(x="Annual Income (k$)", y="Spending Score (1-100)", kind="scatter", data=data)
plt.title("Relationship between Income and Spend")
plt.show()

sns.histplot(data["Spending Score (1-100)"], bins=10)
plt.title("Distribution of Spending Score")
plt.xlabel("Spending Score")
plt.ylabel("Frequency")

plt.show()

cor_mat= data.corr()
mask = np.array(cor_mat)
mask[np.tril_indices_from(mask)] = False
fig=plt.gcf()
fig.set_size_inches(5,5)
sns.heatmap(data=cor_mat,mask=mask,square=True,annot=True,cbar=True)

X = data.iloc[:, [3, 4]].values

from sklearn.cluster import KMeans
wcss = []
for i in range(1, 11):
    kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 42)
    kmeans.fit(X)
    wcss.append(kmeans.inertia_)
plt.plot(range(1, 11), wcss)
plt.title('The Elbow Method')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')
plt.show()

kmeans = KMeans(n_clusters = 5, init = 'k-means++', random_state = 42)
y_kmeans = kmeans.fit_predict(X)

print(y_kmeans)

data = pd.DataFrame(X, columns=['Annual Income (k$)', 'Spending Score (1-100)'])
data['Cluster'] = y_kmeans
data['Cluster Name'] = data['Cluster'].map({
    0: 'Cluster 1',
    1: 'Cluster 2',
    2: 'Cluster 3',
    3: 'Cluster 4',
    4: 'Cluster 5'
})

data[['Annual Income (k$)', 'Spending Score (1-100)', 'Cluster']].head()

plt.scatter(X[y_kmeans == 0, 0], X[y_kmeans == 0, 1], s = 100, c = 'red', label = 'Cluster 1')
plt.scatter(X[y_kmeans == 1, 0], X[y_kmeans == 1, 1], s = 100, c = 'blue', label = 'Cluster 2')
plt.scatter(X[y_kmeans == 2, 0], X[y_kmeans == 2, 1], s = 100, c = 'green', label = 'Cluster 3')
plt.scatter(X[y_kmeans == 3, 0], X[y_kmeans == 3, 1], s = 100, c = 'cyan', label = 'Cluster 4')
plt.scatter(X[y_kmeans == 4, 0], X[y_kmeans == 4, 1], s = 100, c = 'magenta', label = 'Cluster 5')
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 300, c = 'yellow', label = 'Centroids')
plt.title('Clusters of customers')
plt.xlabel('Annual Income (k$)')
plt.ylabel('Spending Score (1-100)')
plt.legend()
plt.show()